# 🧾 SALES REP APP — PROJECT SPECIFICATION (Updated)

## 📌 Objective

Build a **Sales Representative Desktop App** for managing outlet-level sales, tracking inventory, and syncing with a central admin system.

Built using **Flutter** with **Supabase** as the backend and cloud sync layer.

---

## 🔧 PHASE 1: PROJECT SETUP & BOOTSTRAPPING

This phase focuses on preparing the Flutter environment and ensuring all dependencies and file structures are ready for development.

### 🛠️ Project Initialization

1. **Create a New Flutter Desktop App**

```bash
flutter create sales_rep_app
cd sales_rep_app
```

2. **Enable Desktop Target (Windows)**

```bash
flutter config --enable-windows-desktop
```

3. **Update **************\`\`************** with Required Dependencies**

```yaml
dependencies:
  flutter:
    sdk: flutter
  supabase_flutter: ^1.10.9
  flutter_dotenv: ^5.1.0
  provider: ^6.1.0
  sqflite: ^2.3.0
  path_provider: ^2.1.1
  uuid: ^3.0.7
  connectivity_plus: ^5.0.2
  intl: ^0.19.0
```

4. **Create **************\`\`************** file to store Supabase keys**

```
SUPABASE_URL=https://your-project.supabase.co
SUPABASE_ANON_KEY=your-anon-public-key
```

5. \*\*Initialize Supabase in \*\*\`\`

```dart
await Supabase.initialize(
  url: dotenv.env['SUPABASE_URL']!,
  anonKey: dotenv.env['SUPABASE_ANON_KEY']!,
);
```

---

## 📂 PROJECT FOLDER STRUCTURE (Recommended)

```
lib/
├── main.dart
├── core/
│   ├── constants/              # App-wide constants
│   ├── database/               # SQLite services
│   └── services/               # Supabase services
├── models/                     # Data models (e.g., Product, Sale, Rep)
├── screens/
│   ├── auth/                   # Login UI
│   ├── dashboard/              # Main dashboard screen
│   ├── sales/                  # Sales entry and list
│   └── stock/                  # Stock viewing screen
├── utils/                      # Reusable utilities, formatters, etc.
├── widgets/                    # Custom reusable widgets
└── env/                        # Environment config loader
```

---

## ✅ DELIVERABLES FOR PHASE 1

* \- \[x] Flutter desktop project created and runs successfully

  \- \[x] Desktop target enabled for Windows

  \- \[x] Required dependencies added to \`pubspec.yaml\`

  \- \[x] \`.env\` file created and loaded using \`flutter\_dotenv\`

  \- \[x] Supabase initialized correctly in \`main.dart\`

  \- \[x] Folder structure created under \`lib/\` as planned

  \- \[x] App builds without error and loads an empty scaffold or basic placeholder screen for testing

---

Once you confirm phase 1 is completed and builds successfully, we'll proceed to **Phase 2: Authentication Implementation**.
